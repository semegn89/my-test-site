// userCabinet.js

import { showToast } from './utils.js';

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –õ–ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
export function renderUserCabinet() {
  const details = document.querySelector('.details');
  const curUser = JSON.parse(localStorage.getItem('currentUser')) || {};

  if (!curUser || curUser.role !== 'user') {
    details.innerHTML = '<h1>–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</h1>';
    return;
  }

  // –°—Ç–∏–ª–∏ –¥–ª—è —Ñ–æ–Ω–∞
  details.style.background = 'rgba(255,255,255,1)';

  details.innerHTML = `
    <h1>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
    <p><strong>Email:</strong> ${curUser.email}</p>
    <p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${curUser.companyName || ''}</p>
    <p><strong>–ò–ù–ù:</strong> ${curUser.inn || ''}</p>
    <p><strong>–ê–¥—Ä–µ—Å:</strong> ${curUser.address || ''}</p>
    <p><strong>–ë–∞–Ω–∫:</strong> ${curUser.bankName || ''}</p>
    <p><strong>–ë–ò–ö:</strong> ${curUser.bik || ''}</p>
    <p><strong>–°—á—ë—Ç:</strong> ${curUser.accountNumber || ''}</p>
    <p><strong>feePercent:</strong> ${curUser.feePercent || 0}%</p>
    <p><strong>–î–æ–≥–æ–≤–æ—Ä ‚Ññ:</strong> ${curUser.agreementNo || ''}</p>
    <p><strong>–î–∞—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞:</strong> ${curUser.agreementDate || ''}</p>

    <button id="editProfileBtn" class="button">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
    <div id="editProfileArea" style="display:none; margin-top:20px;">
      <form id="profileForm">
        <div class="form-row">
          <label>–ö–æ–º–ø–∞–Ω–∏—è:</label>
          <input type="text" name="companyName" value="${curUser.companyName || ''}">
        </div>
        <div class="form-row">
          <label>–ò–ù–ù:</label>
          <input type="text" name="inn" value="${curUser.inn || ''}">
        </div>
        <div class="form-row">
          <label>–ê–¥—Ä–µ—Å:</label>
          <input type="text" name="address" value="${curUser.address || ''}">
        </div>
        <div class="form-row">
          <label>–ë–∞–Ω–∫:</label>
          <input type="text" name="bankName" value="${curUser.bankName || ''}">
        </div>
        <div class="form-row">
          <label>–ë–ò–ö:</label>
          <input type="text" name="bik" value="${curUser.bik || ''}">
        </div>
        <div class="form-row">
          <label>–°—á—ë—Ç:</label>
          <input type="text" name="accountNumber" value="${curUser.accountNumber || ''}">
        </div>
        <!-- agreementNo/date ‚Äì –Ω–µ –º–µ–Ω—è–µ–º, disabled -->
        <div class="form-row">
          <label>–î–æ–≥–æ–≤–æ—Ä ‚Ññ:</label>
          <input type="text" name="agreementNo" value="${curUser.agreementNo || ''}" disabled>
        </div>
        <div class="form-row">
          <label>–î–∞—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞:</label>
          <input type="text" name="agreementDate" value="${curUser.agreementDate || ''}" disabled>
        </div>
        <button type="submit" class="button">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button type="button" id="cancelProfileEdit" class="button button-outline" style="margin-left:10px;">–û—Ç–º–µ–Ω–∞</button>
      </form>
    </div>

    <hr>
    <h3>–ß–∞—Ç —Å –∞–¥–º–∏–Ω–æ–º</h3>
    <div id="userChatBox" style="border:1px solid #ccc; border-radius:6px; padding:10px; max-height:300px; overflow-y:auto;"></div>
    <div style="display:flex; gap:5px; margin-top:10px;">
      <label for="userChatFile" class="button button-sm button-outline" style="width:auto;">üìé</label>
      <input type="file" id="userChatFile" style="display:none;">
      <input type="text" id="userChatInput" placeholder="–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É..." style="flex:1;">
      <button id="userChatSendBtn" class="button button-sm">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </div>
  `;

  // –ö–Ω–æ–ø–∫–∞ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –ø—Ä–æ—Ñ–∏–ª—å
  const editProfileBtn = details.querySelector('#editProfileBtn');
  const editProfileArea = details.querySelector('#editProfileArea');
  const profileForm = details.querySelector('#profileForm');
  const cancelProfileEdit = details.querySelector('#cancelProfileEdit');

  editProfileBtn.addEventListener('click', () => {
    editProfileArea.style.display = 'block';
  });
  cancelProfileEdit.addEventListener('click', () => {
    editProfileArea.style.display = 'none';
    profileForm.reset();
  });
  profileForm.addEventListener('submit', (e) => {
    e.preventDefault();
    let users = JSON.parse(localStorage.getItem('users')) || [];
    let obj   = JSON.parse(localStorage.getItem('currentUser')) || {};
    const fd  = new FormData(profileForm);

    obj.companyName   = fd.get('companyName')   || '';
    obj.inn           = fd.get('inn')           || '';
    obj.address       = fd.get('address')       || '';
    obj.bankName      = fd.get('bankName')      || '';
    obj.bik           = fd.get('bik')           || '';
    obj.accountNumber = fd.get('accountNumber') || '';
    // agreementNo/date ‚Äì –Ω–µ –º–µ–Ω—è–µ–º, disabled

    const idx = users.findIndex(u => u.email === obj.email);
    if (idx !== -1) {
      users[idx] = obj;
      localStorage.setItem('users', JSON.stringify(users));
      localStorage.setItem('currentUser', JSON.stringify(obj));
      showToast('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', 'success');
      renderUserCabinet(); // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å
    }
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ user->admin
  initUserAdminChat(curUser);
}


/**
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —á–∞—Ç–∞ user->admin
 */
function initUserAdminChat(curUser){
  const chatBox  = document.getElementById('userChatBox');
  const chatFile = document.getElementById('userChatFile');
  const chatInput= document.getElementById('userChatInput');
  const chatSendBtn = document.getElementById('userChatSendBtn');

  if(!chatBox || !chatSendBtn) return;

  let allChats  = JSON.parse(localStorage.getItem('adminChats')) || {};
  let userEmail = curUser.email;
  if(!allChats[userEmail]) allChats[userEmail] = [];
  let chatArr = allChats[userEmail];

  function renderChat(){
    chatBox.innerHTML = '';
    chatArr.forEach(msg => {
      const div = document.createElement('div');
      div.style.marginBottom = '8px';

      if (msg.from === 'user') {
        div.style.textAlign = 'right';
        if (msg.fileName) {
          div.innerHTML = `<div style="display:inline-block;background:#007aff;color:#fff;padding:6px 10px;border-radius:16px;">
            <strong>–í—ã (—Ñ–∞–π–ª):</strong>
            <a href="${msg.fileData}" download="${msg.fileName}" style="color:#fff;">${msg.fileName}</a>
          </div>`;
        } else {
          div.innerHTML = `<div style="display:inline-block;background:#007aff;color:#fff;padding:6px 10px;border-radius:16px;">
            ${msg.text}
          </div>`;
        }
      }
      else {
        // admin
        div.style.textAlign = 'left';
        if (msg.fileName) {
          div.innerHTML = `<div style="display:inline-block;background:#eee;color:#333;padding:6px 10px;border-radius:16px;">
            <strong>–ê–¥–º–∏–Ω (—Ñ–∞–π–ª):</strong>
            <a href="${msg.fileData}" download="${msg.fileName}">${msg.fileName}</a>
          </div>`;
        } else {
          div.innerHTML = `<div style="display:inline-block;background:#eee;color:#333;padding:6px 10px;border-radius:16px;">
            –ê–¥–º–∏–Ω: ${msg.text}
          </div>`;
        }
      }
      chatBox.appendChild(div);
    });
    chatBox.scrollTop = chatBox.scrollHeight;
  }
  renderChat();

  chatSendBtn.addEventListener('click', sendUserChatMsg);
  chatInput.addEventListener('keypress',(ev)=>{
    if(ev.key==='Enter'){
      sendUserChatMsg();
    }
  });

  function sendUserChatMsg(){
    const file = chatFile.files[0];
    const txt  = chatInput.value.trim();
    if(!file && !txt){
      showToast('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª','error');
      return;
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    let msgObj = {
      userEmail,
      from: 'user',
      text: '',
      fileName: '',
      fileData: '',
      date: new Date().toLocaleString()
    };

    if(file){
      const reader = new FileReader();
      reader.onload = function(e){
        let dataURL = e.target.result;
        msgObj.fileName = file.name;
        msgObj.fileData = dataURL;
        msgObj.text     = ''; // –≤ —Å–ª—É—á–∞–µ —Ñ–∞–π–ª–∞
        chatArr.push(msgObj);
        allChats[userEmail] = chatArr;
        localStorage.setItem('adminChats', JSON.stringify(allChats));
        chatFile.value='';
        chatInput.value='';
        renderChat();
      };
      reader.readAsDataURL(file);
    } else {
      // —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
      msgObj.text = txt;
      chatArr.push(msgObj);
      allChats[userEmail] = chatArr;
      localStorage.setItem('adminChats', JSON.stringify(allChats));
      chatInput.value='';
      renderChat();
    }
  }
}